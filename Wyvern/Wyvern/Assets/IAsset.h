#pragma once

#include <string>

///////////////////////////////////////////////////////////////////////////////////////

namespace wv
{

///////////////////////////////////////////////////////////////////////////////////////

	class iAsset
	{

///////////////////////////////////////////////////////////////////////////////////////

	public:
	
		 iAsset( std::string _path ): m_path( _path ) { }
		~iAsset( void ) { }

///////////////////////////////////////////////////////////////////////////////////////

		std::string getPath() { return m_path; }
		bool        isReady() { return m_ready; }

///////////////////////////////////////////////////////////////////////////////////////

		virtual void load( void ) { }

///////////////////////////////////////////////////////////////////////////////////////

	protected:
	
		bool m_ready = false;
		std::string m_path = "";
	
	};

///////////////////////////////////////////////////////////////////////////////////////

}